{"version":3,"sources":["pages/AboutUsPage.js","components/Loading.js","pages/Assignments.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["AboutUsPage","props","Loading","require","WorkDone","id","Table","striped","bordered","hover","size","variant","class","href","colspan","Assignments","state","loading","post","notFound","React","Component","HomePage","Navigation","className","to","exact","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wQAQeA,MANf,SAAqBC,GACnB,OACE,2DCQWC,I,QCPDC,EAAQ,IACtB,SAASC,IAEL,OAEI,gCAGI,sBAAKC,GAAG,UAAR,UACI,gEACA,uBAAK,uBACL,sBAAKA,GAAG,SAAR,UACA,iEACA,+BACI,6BAAI,uFACJ,6BAAI,oGAQZ,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAKC,QAAQ,OAAON,GAAG,QAA1D,UACA,gCACI,+BACI,mCACA,4CACA,4CACA,8CACA,iDACA,mDAGR,kCACI,+BACI,qCACA,gEACA,oBAAIO,MAAM,QAAV,iBACA,qCACA,mCACA,sCAEJ,+BACI,qCACA,kEACA,6BAAI,mBAAGC,KAAK,kCAAR,oBACJ,mCACA,mCACA,sCAEJ,+BACI,qCACA,0EACA,uBACA,qCACA,uBACA,0BAEJ,+BACI,sCACA,yEACA,uBACA,uBACA,uBACA,0BAEJ,+BACI,qCACA,sEACA,6BAAI,mBAAGA,KAAK,OACZ,uBACA,uBACA,0BAEJ,+BACI,sCACA,2DACA,uBACA,uBACA,uBACA,0BAEJ,+BACI,sCACA,0FACA,uBACA,uBACA,uBACA,0BAEJ,+BACI,qCACA,8DACA,oBAAIC,QAAQ,SAEhB,+BACI,qCACA,iEACA,oBAAIA,QAAQ,SAEhB,+BACI,qCACA,iFACA,oBAAIA,QAAQ,SAEhB,+BACI,sCACA,+EACA,oBAAIA,QAAQ,kB,IA+DjBC,E,4MA3BXC,MAAQ,CACJC,SAAS,EACTC,KAAM,KACNC,UAAU,G,oGAUX,OACC,8BACI,cAACf,EAAD,U,GAhBcgB,IAAMC,WC7FjBC,GApDDnB,EAAQ,I,4MAyBlBa,MAAQ,CACJC,SAAS,EACTC,KAAM,KACNC,UAAU,G,oGAUV,OACI,4B,GAfWC,IAAMC,Y,MCZ7B,SAASE,EAAWtB,GAClB,OACE,sBAAKuB,UAAU,0DAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,IAAlC,8BACA,qBAAID,UAAU,qBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,WAAWE,OAAK,EAACD,GAAG,IAAvC,oBAIF,oBAAID,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,WAAWE,OAAK,EAACD,GAAG,YAAvC,qBAIF,oBAAID,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,WAAWE,OAAK,EAACD,GAAG,eAAvC,iC,IAgCKE,E,uKApBX,OAEE,eAAC,IAAD,WACE,cAACJ,EAAD,IACA,qBAAKC,UAAU,8BAAf,SACE,qBAAKA,UAAU,6BAAf,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,YAAYC,UAAW7B,IACnC,cAAC,IAAD,CAAO4B,KAAK,eAAeC,UAAWd,IACtC,cAAC,IAAD,CAAOa,KAAK,IAAIC,UAAWP,kB,GAZvBF,IAAMC,W,MC9BJS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1b4b7835.chunk.js","sourcesContent":["import React from 'react';\n\nfunction AboutUsPage(props) {\n  return (\n    <div>A little info about us.</div>\n  );\n}\n\nexport default AboutUsPage;","import React from 'react';\n\nfunction Loading() {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Loading;","import React from 'react';\nimport Post from '../components/Post';\nimport Loading from '../components/Loading';\nimport { Redirect } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table'\nconst axios = require('axios');\nfunction WorkDone(){\n\n    return(\n\n        <div>\n\n\n            <div id=\"aHeader\">\n                <h1>Christian Vargas's Assignments</h1>\n                <br/><br/>\n                <div id=\"metric\">\n                <h3>Full-stack app Development 2021</h3>\n                <ul>\n                    <li><h6>Difficulty: 1 = no problem at all, 5 = could not do</h6></li>\n                    <li><h6>Usefulness: 1 = not a good use of time, 5 = very useful</h6></li>\n                </ul>\n                </div>\n\n\n            </div>\n        \n\n            <Table striped bordered hover size=\"sm\" variant=\"dark\" id=\"table\">\n            <thead>\n                <tr>\n                    <td>#</td>\n                    <td>Assignment</td>\n                    <td>Submission</td>\n                    <td>Time (hours)</td>\n                    <td>Difficult (1-5)</td>\n                    <td>Useful (1-5)</td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>1.1</td>\n                    <td>Watch tutorial 1, follow along</td>\n                    <td class=\"empty\">N/A</td>\n                    <td>1.5</td>\n                    <td>1</td>\n                    <td>3</td>\n                </tr>\n                <tr>\n                    <td>1.2</td>\n                    <td>Deploy a website to GitHub pages</td>\n                    <td><a href=\"https://orlandpm-demo.github.io\">link</a></td>\n                    <td>1</td>\n                    <td>2</td>\n                    <td>4</td>\n                </tr>\n                <tr>\n                    <td>1.3</td>\n                    <td>Deploy an assignments page (this page!) </td>\n                    <td></td>\n                    <td>1.5</td>\n                    <td></td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>1.4*</td>\n                    <td>Create a personal/professional homepage</td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>1.5</td>\n                    <td>Create two screens of your first app</td>\n                    <td><a href=\"\"></a></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>1.6*</td>\n                    <td>Create a side-menu in CSS</td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>1.7*</td>\n                    <td>Create a periodic table of the elements using HTML & CSS</td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>1.A</td>\n                    <td>What did you like this week?</td>\n                    <td colspan=\"4\"></td>\n                </tr>\n                <tr>\n                    <td>1.B</td>\n                    <td>What didn't you like this week?</td>\n                    <td colspan=\"4\"></td>\n                </tr>\n                <tr>\n                    <td>1.C</td>\n                    <td>How can we improve the material from this week?</td>\n                    <td colspan=\"4\"></td>\n                </tr>\n                <tr>\n                    <td>1.D*</td>\n                    <td>Show us anything else you coded up this week!</td>\n                    <td colspan=\"4\"></td>\n                </tr>\n            </tbody>\n        </Table>\n\n        </div>\n            \n\n       \n    )\n\n}\n// function ShowWeather(){\n//     let city,temp;\n//     axios({\n//         method: 'get',\n\n//         url: 'http://api.weatherapi.com/v1/current.json?key=412fc75e772945df97e55438210601&q=London',\n//         // 'http://api.weatherapi.com/v1/key=412fc75e772945df97e55438210601&q=London',\n//         headers: {\n//             \"Access-Control-Allow-Origin\": \"*\"\n//         }\n\n//     }).then(weather => {\n//     // console.log(weather.data);\n//         city =  weather.data.location.name;\n//         temp=weather.data.current.temp_f;\n        \n//         //console.log(current);\n//     }).catch(err => { console.log(err) })\n   \n//     return(\n//         <h1>City: {city}</h1>\n//     )\n// }\nclass Assignments extends React.Component {\n    state = {\n        loading: true,\n        post: null,\n        notFound: false,\n\n    }\n\n    componentDidMount() {\n        \n    }\n\n\n    render() {\n       return(\n        <div>\n            <WorkDone/>\n            \n\n        </div>\n       )\n        if (this.state.notFound) return <Redirect to=\"/\" />;\n        if (this.state.loading) return <Loading />;\n\n        \n    }\n}\n\nexport default Assignments;","import React from 'react';\nimport Post from '../components/Post';\nimport Loading from '../components/Loading';\nimport { Redirect } from 'react-router-dom';\nconst axios = require('axios');\n// function ShowWeather(){\n//     let city,temp;\n//     axios({\n//         method: 'get',\n\n//         url: 'http://api.weatherapi.com/v1/current.json?key=412fc75e772945df97e55438210601&q=London',\n//         // 'http://api.weatherapi.com/v1/key=412fc75e772945df97e55438210601&q=London',\n//         headers: {\n//             \"Access-Control-Allow-Origin\": \"*\"\n//         }\n\n//     }).then(weather => {\n//     // console.log(weather.data);\n//         city =  weather.data.location.name;\n//         temp=weather.data.current.temp_f;\n\n//         //console.log(current);\n//     }).catch(err => { console.log(err) })\n\n//     return(\n//         <h1>City: {city}</h1>\n//     )\n// }\nclass HomePage extends React.Component {\n    state = {\n        loading: true,\n        post: null,\n        notFound: false,\n\n    }\n\n    componentDidMount() {\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                {/* <ShowWeather/> */}\n\n\n            </div>\n        )\n        //if (this.state.notFound) return <Redirect to=\"/\" />;\n        // if (this.state.loading) return <Loading />;\n\n\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink\n} from 'react-router-dom';\n\nimport AboutUsPage from './pages/AboutUsPage';\nimport Assignments from './pages/Assignments';\nimport HomePage from './pages/HomePage';\n\nimport './App.css';\n\n\nfunction Navigation(props) {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark shadow mb-3\">\n      <Link className=\"navbar-brand\" to=\"/\">Christian's Site</Link>\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" exact to=\"/\">\n            Home\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" exact to=\"/about-us\">\n            About\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" exact to=\"/assignments\">\n            Assignments\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      \n      <Router>\n        <Navigation />\n        <div className=\"container-fluid text-center\">\n          <div className=\"row justify-content-center\">\n            \n            <Switch>\n              <Route path=\"/about-us\" component={AboutUsPage} />\n              <Route path=\"/assignments\" component={Assignments} />\n              <Route path=\"/\" component={HomePage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}